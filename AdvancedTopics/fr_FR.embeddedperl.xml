<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[
  <!ENTITY % all.entities SYSTEM "../all-entities.ent">
  %all.entities;
]
>
<chapter id="advancedtopics-embeddedperl" xreflabel="Using The Embedded Perl Interpreter">
	<title>Using The Embedded Perl Interpreter</title>
	<section>
		<title>Introduction</title>
		<para>
		<informalfigure>
			<mediaobject>
		      <imageobject>
		        <imagedata fileref="images/epn.png" format="PNG"/>
		      </imageobject>
		    </mediaobject>
		</informalfigure>
Nagios can be compiled with support for an embedded Perl interpreter. This 
allows Nagios to execute Perl plugins much more efficiently that it 
otherwise would, so it may be of interest to you if you rely heavily on 
plugins written in Perl.</para>
		<para>Without the embedded Perl interpreter, Nagios executes Perl (and non-Perl) 
plugins by forking and executing the plugins as an external command. When 
the embedded Perl interpreter is used, Nagios can execute Perl plugins by 
simply making a library call.</para>
		<tip><para>The embedded Perl interpreter works with all Perl scripts that Nagios 
executes - not just plugins. This documentation discusses the embedded Perl 
interpreter in relation to plugins used for host and service checks, but it 
applies just the same to other types of Perl scripts you may be using for 
other types of commands (e.g. notification scripts, event handler scripts, 
etc.).</para></tip>
		<para>Stephen Davies contributed the original embedded Perl interpreter code 
several years back.  Stanley Hopcroft has been the primary person helping to 
improve the embedded Perl interpreter code quite a bit and has commented on 
the advantages/disadvanges of using it. He has also given several helpful 
hints on creating Perl plugins that work properly with the embedded 
interpreter.</para>
		<para>It should be noted that "ePN", as used in this documentation, refers to 
embedded Perl Nagios, or if you prefer, Nagios compiled with an embedded 
Perl interpreter.</para>
	</section>
	<section>
		<title>Advantages</title>
		<para>Some advantages of ePN (embedded Perl Nagios) include:</para>
		<itemizedlist>
			<listitem>
				<para>Nagios will spend much less time running your Perl plugins because it no 
longer forks to execute the plugin (each time loading the Perl 
interpreter). Instead, it executes your plugin by making a library call.</para>
			</listitem>
			<listitem>
				<para>It greatly reduces the system impact of Perl plugins and/or allows you to 
run more checks with Perl plugin than you otherwise would be able to. In 
other words, you have less incentive to write plugins in other languages 
such as C/C++, or Expect/TCL, that are generally recognised to have 
development times at least an order of magnitude slower than Perl (although 
they do run about ten times faster also - TCL being an exception).</para>
			</listitem>
			<listitem>
				<para>If you are not a C programmer, then you can still get a huge amount of 
mileage out of Nagios by letting Perl do all the heavy lifting without 
having Nagios slow right down.  Note however, that the ePN will not speed up 
your plugin (apart from eliminating the interpreter load time). If you want 
fast plugins then consider Perl XSUBs (XS), or C after you are sure that 
your Perl is tuned and that you have a suitable algorithm (Benchmark.pm is 
invaluable for comparing the performance of Perl language elements).</para>
			</listitem>
			<listitem>
				<para>Using the ePN is an excellent opportunity to learn more about Perl.</para>
			</listitem>
</itemizedlist>
	</section>
	<section>
		<title>Disadvantages</title>
		<para>The disadvantages of ePN (embedded Perl Nagios) are much the same as Apache 
mod_perl (i.e. Apache with an embedded interpreter) compared to a plain 
Apache:</para>
		<itemizedlist>
			<listitem>
				<para>A Perl program that works fine with plain Nagios may not work with the 
ePN. You may have to modify your plugins to get them to work.</para>
			</listitem>
			<listitem>
				<para>Perl plugins are harder to debug under an ePN than under a plain Nagios.</para>
			</listitem>
			<listitem>
				<para>Your ePN will have a larger SIZE (memory footprint) than a plain Nagios.</para>
			</listitem>
			<listitem>
				<para>Some Perl constructs cannot be used or may behave differently than what you 
would expect.</para>
			</listitem>
			<listitem>
				<para>You may have to be aware of 'more than one way to do it' and choose a way 
that seems less attractive or obvious.</para>
			</listitem>
			<listitem>
				<para>You will need greater Perl knowledge (but nothing very esoteric or stuff 
about Perl internals - unless your plugin uses XSUBS).</para>
			</listitem>
</itemizedlist>
	</section>
	<section>
		<title>Using The Embedded Perl Interpreter</title>
		<para>If you want to use the embedded Perl interpreter to run your Perl plugins 
and scripts, here's what you'll need to do:</para>
		<orderedlist>
			<listitem>
				<para>Compile Nagios with support for the embedded Perl interpreter (see 
instructions below).</para>
			</listitem>
			<listitem>
				<para>Enable the <link 
linkend="configuringnagios-configmain-enable_embedded_perl">enable_embedded_perl</link> 
option in the main configuration file.</para>
			</listitem>
			<listitem>
				<para>Set the <link 
linkend="configuringnagios-configmain-use_embedded_perl_implicitly">use_embedded_perl_implicitly</link> 
option to fit your needs. This option determines whether or not the Perl 
interpreter should be used by default for individual Perl plugins and 
scripts.</para>
			</listitem>
			<listitem>
				<para>Optionally enable or disable certain Perl plugins and scripts from being run 
using the embedded Perl interpreter. This can be useful if certain Perl 
scripts have problems being running under the Perl interpreter. See 
instructions below for more information on doing this.</para>
			</listitem>
		</orderedlist>
	</section>
	<section>
		<title>Compiling Nagios With Embedded Perl</title>
		<para>If you want to use the embedded Perl interpreter, you'll first need to 
compile Nagios with support for it.  To do this, simply run the configure 
script with the addition of the <option>--enable-embedded-perl</option> option.  If you want the embedded interpreter to cache internally compiled 
scripts, add the <option>--with-perlcache</option>
		option as well. Example:</para>
		<screen>
		<prompt>linux:~ # </prompt><userinput>./configure --enable-embedded-perl --with-perlcache otheroptions...</userinput>
		</screen>
		<para>Once you've rerun the configure script with the new options, make sure to 
recompile Nagios.</para>
	</section>
	<section>
		<title>Plugin-Specific Use of the Perl Interpreter</title>
		<para>Beginning with Nagios 3, you can specify which Perl plugins or scripts 
should or should not be run under the embedded Perl interpreter. This is 
particularly useful if you have troublesome Perl scripts which do not work 
well with the Perl interpreter.</para>
		<para>To explicitly tell Nagios whether or not to use the embedded Perl 
interpreter for a particular perl script, add one of the following entries 
to your Perl script/plugin...</para>
		<para>To tell Nagios to use the Perl interpreter for a particular script, add this 
line to the Perl script:</para>
		<programlisting># nagios: +epn</programlisting>
		<para>To tell Nagios to NOT use the embedded Perl interpreter for a particular 
script, add this line to the Perl script:</para>
		<programlisting># nagios: -epn</programlisting>
		<para>Either line must be located within the first 10 lines of a script for Nagios 
to detect it.</para>
		<tip><para>If you do not explicitly use the method above to tell Nagios whether an 
individual plugin can be run under the Perl interpreter, Nagios will make 
will a decision for you. This decision process is controlled by the <link 
linkend="configuringnagios-configmain-use_embedded_perl_implicitly">use_embedded_perl_implicitly</link> 
variable. If the value is set to 1, all Perl plugins/scripts (that do not 
explicitly enable/disable the ePN) will be run under the Perl interpreter.  
If the value is 0, they will NOT be run under the Perl interpreter.</para></tip>
	</section>
	<section>
		<title>Developing Plugins For Use With Embedded Perl</title>
		<para>Information on developing plugins for use with the embedded Perl interpreter 
can be found <link linkend="development-epnplugins">here</link>.</para>
	</section>
</chapter>

