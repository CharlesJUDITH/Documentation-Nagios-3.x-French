<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[
 <!ENTITY % all.entities SYSTEM "../all-entities.ent">
 %all.entities;
]
>
<chapter id="advancedtopics-freshness" xreflabel="Service and Host Freshness Checks">
	<title>Contrôle de la fraîcheur des résultats d'hôtes et de services</title>
	<section>
		<title>Introduction</title>
		<para>Nagios propose une fonctionnalité de vérification de la
<quote>fraîcheur</quote> des résultats de contrôles d'hôtes et de
services. Cette fonctionnalité est utile pour vous assurer que des contrôles
passifs sont reçus à la fréquence que vous souhaitez.</para>
		<para>Le but du contrôle de <quote>fraîcheur</quote> est de s'assurer que les
contrôles d'hôte et de service sont soumis régulièrement de <link
linkend="thebasics-passivechecks">manière passive</link>. Ceci est très
utile dans les environnements de supervision <link
linkend="advancedtopics-distributed">distribué</link> ou <link
linkend="advancedtopics-redundancy">hautement disponible</link>.</para>
	</section>
	<section>
		<title>Comment fonctionne le contrôle de la fraîcheur ?</title>
		<para>
			    <inlinemediaobject> <imageobject> <imagedata fileref="images/freshness.png"
format="PNG"/> </imageobject> </inlinemediaobject> Nagios contrôle
régulièrement la "fraîcheur" des résultats de tous les services dont le
contrôle de fraîcheur est activé.</para>
		<itemizedlist>
			<listitem>
				<para>Un seuil de fraîcheur est calculé pour chaque hôte et service.</para>
			</listitem>
			<listitem>
				<para>Pour chaque hôte/service, l'heure du dernier contrôle est comparée avec le
seuil de fraîcheur.</para>
			</listitem>
			<listitem>
				<para>Si l'heure du dernier contrôle est supérieure au seuil de fraîcheur, le
résultat du contrôle est considéré comme <quote>périmé</quote>.</para>
			</listitem>
			<listitem>
				<para>Si le résultat du contrôle est déclaré périmé, Nagios va forcer un <link
linkend="thebasics-activechecks">contrôle actif</link> de l'hôte ou du
service en exécutant la commande précisée dans la définition de l'hôte ou du
service.</para>
			</listitem>
		</itemizedlist>
		<tip><para>Un contrôle actif est exécuté même si les contrôles actifs sont désactivés
au niveau global ou au niveau service/hôte.</para></tip>
		<para>Par exemple, si vous donnez la valeur 60 au paramètre freshness_threshold de
l'un de vos services, Nagios considérera que le service est
<quote>périmé</quote> si le dernier résultat obtenu date de plus de 60
secondes (1 minute).</para>
	</section>
	<section>
		<title>Activer le contrôle de la fraîcheur</title>
		<para>Voici ce dont vous avez besoin pour activer le contrôle de la fraîcheur...</para>
		<itemizedlist>
			<listitem>
				<para>Activez le contrôle de fraîcheur par les paramètres <link
linkend="configuringnagios-configmain-check_service_freshness">check_service_freshness</link>
et <link
linkend="configuringnagios-configmain-check_host_freshness">check_host_freshness</link>
du fichier de configuration principal.</para>
			</listitem>
			<listitem>
				<para>Utilisez les paramètres <link
linkend="configuringnagios-configmain-service_freshness_check_interval">service_freshness_check_interval</link>
et <link
linkend="configuringnagios-configmain-host_freshness_check_interval">host_freshness_check_interval</link>
pour indiquer à Nagios l'intervalle auquel il doit contrôler la fraîcheur
des résultats d'hôtes et de services.</para>
			</listitem>
			<listitem>
				<para>Activer le contrôle de la fraîcheur d'un hôte ou d'un service en particulier
en passant le paramètre <varname>check_freshness</varname> à 1 dans le
fichier de définition de l'hôte ou du service.</para>
			</listitem>
			<listitem>
				<para>Configurez les seuils de fraîcheur en réglant le paramètre
<varname>freshness_threshold</varname> dans le fichier de définition de
l'hôte ou du service.</para>
			</listitem>
			<listitem>
				<para>Configurez le paramètre <varname>check_command</varname> dans votre fichier
de définition d'hôte ou de service pourc indiquer la commande valide à
utiliser pour contrôler activement le service ou l'hôte lorsque celui-ci est
déclaré périmé.</para>
			</listitem>
			<listitem>
				<para>Le paramètre <varname>check_period</varname> dans votre fichier de
définition d'hôte ou de service est utilisé quand Nagios doit déterminer
lorsque'un hôte ou service doit être contrôlé au niveau fraîcheur, aussi
assurez-vous de le régler sur une période de temps valide.</para>
			</listitem>
		</itemizedlist>
		<tip><para>Si vous ne spécifiez pas de valeur pour le paramètre
<varname>freshness_threshold</varname> (ou si vous le mettez à zéro), Nagios
calculera automatiquement un seuil de fraîcheur à utiliser en se basant sur
la fréquence de scontrôle utilisé pour cet hôte ou service. je vous
recommande d'explicitement préciser un niveau de fraîcheur plutôt que de
laisser Nagios en décider un à votre place.</para></tip>
	</section>
	<section>
		<title>Exemple</title>
		<para>Un exemple de service purement passif pourrait être un rapport d'état de vos
travaux de sauvegarde de nuit. Vous avez peut-être un script externe qui
soumet les résultats du travail de sauvegarde à Nagios une fois que la
sauvegarde est terminée. Dans ce cas, tous les résultats des contrôles pour
ce service sont fournis par une application externe, en utilisant des
contrôles passifs. Pour vous assurer que l'état des travaux de sauvegarde
est bien remonté chaque jour, vous activerez le contrôle de fraîcheur pour
ce service. Si le script externe ne soumet pas les resultats du travail de
sauvegarde, vous pouvez faire en sorte que Nagios simule un résultat
critique de la manière suivante...</para>
		<para>Voici ce à quoi la définition du service pourrait ressembler (certains
paramètres obligatoires ont été omis)... </para>
		<programlisting>define service{
		        host_name               backup-server
		        service_description     ArcServe Backup Job
		        active_checks_enabled   0               ; active checks are NOT enabled
		        passive_checks_enabled  1               ; passive checks are enabled (this is how results are reported)
		        check_freshness         1
		        freshness_threshold     93600           ; 26 hour threshold, since backups may not always finish at the same time
		        check_command           no-backup-report        ; this command is run only if the service results are <quote>stale</quote>
		        ...other options...
		        }</programlisting>
		<para>Notez que les contrôles actifs sont désactivés pour ce service. En effet les
résultats du service sont uniquement fournis par une application externe, en
utilisant des contrôles passifs. Le contrôle de fraîcheur est activé et le
seuil de fraîcheur a été positionné à 26 heures. C'est un peu plus de 24
heures parce que la durée des travaux de sauvegarde varie selon les jours
(en fonction du volume de données à sauvegarder, de l'encombrement du
réseau, etc.). La <code>no-backup-report</code> commande est exécutée seulement si les résultats du service sont considérés
comme périmés. La définition de la <code>no-backup-report</code> commande pourrait ressembler à ceci...</para>
		<programlisting>define command{
		        command_name    no-backup-report
		        command_line    /usr/local/nagios/libexec/check_dummy 2 "CRITICAL: Results of backup job were not reported!"
		        }</programlisting>
		<para>Si Nagios détecte que les résultats du service sont périmés, il va lancer la 
		<code>no-backup-report</code> commande comme un contrôle actif de service. Cela exécute le plugin
&plugin-dummy; qui retourne un état critique à Nagios. Le service passe en
état critique (s'il n'y était pas déjà) et quelqu'un sera probablement
notifié du problème.</para>
	</section>
</chapter>

