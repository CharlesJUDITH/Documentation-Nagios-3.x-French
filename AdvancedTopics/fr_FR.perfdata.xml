<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[
 <!ENTITY % all.entities SYSTEM "../all-entities.ent">
 %all.entities;
]
>
<chapter id="advancedtopics-perfdata" xreflabel="Performance Data">
	<title>Données De Performance</title>

	<section>
		<title>Introduction</title>

		<para>Nagios est conçu pour permettre aux <link
linkend="thebasics-plugins">plugins</link> de retourner des données de
performance en plus des données normales de statut, ce qui vous permet ainsi
de tranférer ces données de performances vers une application externe pour y
être traitées. Une description des différents type de données de
performance, ainsi que des informations sur la façon de traiter ces données
sont décrites ci-dessous…</para>
	</section>

	<section>
		<title>Les types de données de performance</title>

		<para>Il existe deux catégories de base de données de performance qui peuvent être
obtenues à partir de Nagios:</para>

		<orderedlist>
			<listitem>
				<para>Les données de performance relatives au contrôle</para>
			</listitem>

			<listitem>
				<para>Les données de performance relatives au plugin</para>
			</listitem>
		</orderedlist>

		<para>Les données de performance relative à un contrôle sont des données internes
relatives à l'exécution courante d'un contrôle de l'hôte ou du service. Cela
peut comprendre des choses comme la latence d'un contrôle de service
(par exemple combien <quote>de retard</quote> a un contrôle de service par rapport à l'horaire
planifié d'exécution) et le nombre de secondes qu'il aura fallu pour
exécuter un contrôle d'hôte ou des service. Ce type de données de
performance sont valables pour tous les contrôles qui sont effectués. Les
<link linkend="thebasics-macros">macros</link> <link
linkend="thebasics-macrolist-hostexecutiontime">&macro-hostexecutiontime;</link>
et <link
linkend="thebasics-macrolist-serviceexecutiontime">&macro-serviceexecutiontime;</link>
peuvent être utilisées pour determiner le nombre de secondes qu'aura duré un
contrôle d'hôte ou de service et les macros <link
linkend="thebasics-macrolist-hostlatency">&macro-hostlatency;</link> et <link
linkend="thebasics-macrolist-servicelatency">&macro-servicelatency;</link> peuvent
être utilisées afin de derterminer le "retard" que pourrait avoir un
contrôle régulier d'un hôte ou d'un service.</para>

		<para>Les données de performance d'un plugin sont des données spécifiques au
plugin utilisé pour contrôler l'hôte ou le service. Les données spécifiques
d'un plugin peuvent contenir des choses comme le pourcentage de paquets
perdus, l'espace disque restant, la charge processeur, le nombre
d'utilisateurs connectés, etc… - en fait, tout type de données que le
plugin contrôle quand il est exécuté. Les données de performance spécifiques
au plugin sont facultatives et ne sont pas forcement disponibles avec tous
les plugins. Les données de performances spécifiques au plugin (si
disponibles) peuvent être obtenues en utilisant les macros <link
linkend="thebasics-macrolist-hostperfdata">&macro-hostperfdata;</link> et <link
linkend="thebasics-macrolist-serviceperfdata">&macro-serviceperfdata;</link> <link
linkend="thebasics-macros"></link>. Lire la suite pour plus d'informations
sur la façon dont les plugins peuvent retourner les données de performance à
Nagios afin de les stocker dans les macros &macro-hostperfdata; and
&macro-serviceperfdata;.</para>
	</section>

	<section>
		<title>Les données de performance relatives au plugin</title>

		<para>Au minimum, les plugins Nagios doivent au moins retourner une simple ligne
de texte compréhensible par l'utilisateur lambda qui indique l'état de
certains types de données mesurables. Par exemple, le plugin &plugin-ping;
pourrait retourner une ligne de texte comme celle qui suit:</para>

		<programlisting>PING ok - Packet loss = 0%, RTA = 0.80 ms </programlisting>

		<para>Avec ce simple type de sortie, la ligne entière est disponible dans les
<link linkend="thebasics-macros">macros</link> &macro-hostoutput; ou
&macro-serviceoutput; (Cela dépend si le pllugin est utilisé pour le contrôle d'un
hôte ou d'un service).</para>

		<para>Les plugins peuvent renvoyer des données de performance dans leur message
normal de sortie, un texte clair (lisible par l'homme) habituellement suivi
du caractère 'pipe' (|), et d'une chaîne contenant une ou plusieurs données
de performance. Prenons le plugin &plugin-ping; comme exemple et supposons
qu'il a été configuré pour retourner le pourcentage de paquets perdus et la
moyenne des aller-retour comme données de performance. Un exemple de sortie
du plugin pourrait ressembler à ceci:</para>

		<programlisting>PING ok - Packet loss = 0%, RTA = 0.80 ms | percent_packet_loss=0, rta=0.80</programlisting>

		<para>Quand Nagios rencontre ce type de format pour le message de de sortie du
plugin, il le scindera en deux parties:</para>

		<orderedlist>
			<listitem>
				<para>Tout ce qui est situé avant le caratère 'pipe' ( | ) est considéré comme le
message de sortie <quote>normal</quote> du plugin et sera alors stocké selon
le cas dans les macros &macro-hostoutput; ou &macro-serviceoutput;</para>
			</listitem>

			<listitem>
				<para>Tout ce qui est situé après le caractère 'pipe' ( | ) est considéré comme
étant les données de performance du plugin et seront stockées selon le cas
dans les macros &macro-hostperfdata; ou &macro-serviceperfdata; </para>
			</listitem>
		</orderedlist>

		<para>Dans l'exemple ci-dessus, la macro &macro-hostoutput; ou &macro-serviceoutput;
contiendra <emphasis><quote>PING ok - Packet loss = 0%, RTA = 0.80 ms</quote></emphasis>
(sans les guillemets) et la macro &macro-hostperfdata; ou &macro-serviceperfdata;
contiendra <emphasis><quote>percent_packet_loss=0, rta=0.80</quote></emphasis> (sans les
guillemets).</para>

		<para>Plusieurs lignes de données de performance (comme pour le texte normal de
sortie) peuvent être transmises par les plugins, comme décrit dans la <link
linkend="development-pluginapi">documentation sur les &acronym-api;s des
plugins</link>.</para>

		<note>
			<para>Le démon Nagios ne traite pas directement les données de performance des
plugins, du coup il ne sait pas vraiment à quoi elles ressemblent. Il n'y a
pas vraiment de limites inhérentes au format ou au contenu des données de
performance. Toutefois, si vous utilisez un module externe pour traiter les
données de performance (par exemple PerfParse), le module attend que le plugin
renvoie les données de performance dans un format spécifique. Vérifiez la
documentation du module pour plus d'information. </para>
		</note>
	</section>

	<section>
		<title>Traiter les données de performance</title>

		<para>Si vous voulez traiter les données de performance disponible dans Nagios au
travers des plugins, vous devez configurer ce qui suit:</para>

		<orderedlist>
			<listitem>
				<para>Activer l'option <link
linkend="configuringnagios-configmain-process_performance_data">process_performance_data</link>.</para>
			</listitem>

			<listitem>
				<para>Configurer Nagios pour que les données de performance soient écrites dans
des fichiers et/ou traitées directement en exécutant des commandes.</para>
			</listitem>
		</orderedlist>

		<para>Lire la suite pour plus d'informations sur la façon de traiter les données
de performance en les écrivant des des fichiers ou en exécutant des
commandes.</para>
	</section>

	<section>
		<title>Commandes pour traiter les données de performance</title>

		<para>Le moyen le plus souple pour traiter les données de performance est de faire
exécuter à Nagios des commandes (que vous avez spécifié) pour traiter ou
rediriger les données pour un traitement ultérieur par des applications
externes. Les commandes que Nagios exécute pour traiter les données de
performances sont définies par les options <link
linkend="configuringnagios-configmain-host_perfdata_command">host_perfdata_command</link>
and <link
linkend="configuringnagios-configmain-service_perfdata_command">service_perfdata_command</link>,
respectivement.</para>

		<para>Un exemple de définition de commande qui redirige les données de performance
dans un fichier texte pour un traitement ultérieur par une autre application
est montré ci-dessous:</para>

		<programlisting>define command{
		        command_name    store-service-perfdata
		        command_line    /bin/echo -e "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$" &gt;&gt; /usr/local/nagios/var/service-perfdata.dat
		        }</programlisting>

		<tip>
			<para>Cette méthode, bien que souple, est synonyme d'un niveau relativement élevé
en terme de charge du &acronym-cpu;. Si vous traitez les données de performance d'un
grand nombre de serveurs et de services, vous voudriez probablement que
Nagios écrive les données de performance dans des fichiers à la place. Cette
méthode est décrite dans la section suivante.</para>
		</tip>
	</section>

	<section>
		<title>Écrire les données de performances dans des fichiers</title>

		<para>Vous pouvez faire en sorte que Nagios écrive toutes les données de
performances des hôtes et des services directement dans un fichier texte en
utilisant les options <link
linkend="configuringnagios-configmain-host_perfdata_file"><literal>host_perfdata_file</literal></link>
et <link
linkend="configuringnagios-configmain-service_perfdata_file"><literal>service_perfdata_file</literal></link>.
Le format dans lequel les données de performance des hôtes et des services
seront écrites est défini dans les options <link
linkend="configuringnagios-configmain-host_perfdata_file_template"><literal>host_perfdata_file_template</literal></link>
et <link
linkend="configuringnagios-configmain-service_perfdata_file_template"><literal>service_perfdata_file_template</literal></link>.</para>

		<para>Un exemple de format de modèle pour les données de performance d'un service
pourrait ressembler à ceci:</para>

		<programlisting>service_perfdata_file_template=[SERVICEPERFDATA]\t$TIMET$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$</programlisting>

		<para>Par défaut, les fichiers texte seront ouverts en mode <quote>append</quote>. Si vous
avez besoin de changer les modes en <quote>write</quote> ou <quote>non-blocking read/write</quote>
(utile lors d'écriture via 'pipe'), vous pouvez utiliser les options <link
linkend="configuringnagios-configmain-host_perfdata_file_mode"><literal>host_perfdata_file_mode</literal></link>
et <link
linkend="configuringnagios-configmain-service_perfdata_file_mode"><literal>service_perfdata_file_mode</literal></link>.</para>

		<para>En outre, vous pouvez avoir Nagios qui exécute périodiquement des commandes
traite périodiquement les fichiers de données de performance (par exemple à
tour de rôle) en utilisant les options <link
linkend="configuringnagios-configmain-host_perfdata_file_processing_command"><literal>host_perfdata_file_processing_command</literal></link>
et <link
linkend="configuringnagios-configmain-service_perfdata_file_processing_command"><literal>service_perfdata_file_processing_command</literal></link>.
L'intervalle à laquelle ces commandes sont exécutées sont régies par les
options <link
linkend="configuringnagios-configmain-host_perfdata_file_processing_interval"><literal>host_perfdata_file_processing_interval</literal></link>
et <link
linkend="configuringnagios-configmain-service_perfdata_file_processing_interval"><literal>service_perfdata_file_processing_interval</literal></link>,
respectivement.</para>
	</section>
</chapter>

