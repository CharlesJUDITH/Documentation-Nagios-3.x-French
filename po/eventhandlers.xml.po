# French translations for docnagios package
# Copyright (C) 2009 Free Software Foundation, Inc.
# This file is distributed under the same license as the docnagios package.
# Automatically generated, 2009.
#
msgid ""
msgstr ""
"Project-Id-Version: docnagios 3\n"
"POT-Creation-Date: 2009-01-06 15:00+0100\n"
"PO-Revision-Date: 2009-01-06 15:00+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: GettingStarted/monitoring-windows.xml:39
#: GettingStarted/monitoring-linux.xml:38 TheBasics/plugins.xml:96
#: AdvancedTopics/eventhandlers.xml:37
msgid "etc."
msgstr ""

# type: Content of: <chapter><section><title>
#: GettingStarted/monitoring-windows.xml:45
#: GettingStarted/monitoring-linux.xml:43
#: GettingStarted/monitoring-netware.xml:12
#: GettingStarted/monitoring-printers.xml:26
#: GettingStarted/monitoring-routers.xml:23
#: GettingStarted/monitoring-publicservices.xml:22
#: ConfiguringNagios/config.xml:13 ConfiguringNagios/objectdefinitions.xml:13
#: ConfiguringNagios/customobjectvars.xml:12 ConfiguringNagios/cgiauth.xml:14
#: TheBasics/plugins.xml:13 TheBasics/hostchecks.xml:12
#: TheBasics/servicechecks.xml:12 TheBasics/activechecks.xml:13
#: TheBasics/passivechecks.xml:14 TheBasics/statetypes.xml:13
#: TheBasics/timeperiods.xml:15 TheBasics/networkreachability.xml:14
#: TheBasics/notifications.xml:13 TheBasics/cgis.xml:13
#: AdvancedTopics/extcommands.xml:12 AdvancedTopics/eventhandlers.xml:12
#: AdvancedTopics/volatileservices.xml:13 AdvancedTopics/freshness.xml:12
#: AdvancedTopics/distributed.xml:12 AdvancedTopics/redundancy.xml:13
#: AdvancedTopics/redundancy.xml:72 AdvancedTopics/redundancy.xml:433
#: AdvancedTopics/flapping.xml:14 AdvancedTopics/escalations.xml:13
#: AdvancedTopics/oncallrotation.xml:12 AdvancedTopics/clusters.xml:12
#: AdvancedTopics/dependencies.xml:12 AdvancedTopics/stalking.xml:13
#: AdvancedTopics/perfdata.xml:13 AdvancedTopics/downtime.xml:12
#: AdvancedTopics/embeddedperl.xml:12 AdvancedTopics/adaptive.xml:13
#: AdvancedTopics/dependencychecks.xml:12 AdvancedTopics/cachedchecks.xml:12
#: AdvancedTopics/passivestatetranslation.xml:14
#: AdvancedTopics/cgiincludes.xml:12 AdvancedTopics/objectinheritance.xml:13
#: AdvancedTopics/objecttricks.xml:16
#: SecurityAndPerformanceTuning/cgisecurity.xml:13
#: SecurityAndPerformanceTuning/tuning.xml:14
#: SecurityAndPerformanceTuning/faststartup.xml:14
#: SecurityAndPerformanceTuning/largeinstalltweaks.xml:12
#: SecurityAndPerformanceTuning/nagiostats.xml:12
#: SecurityAndPerformanceTuning/mrtggraphs.xml:14
#: IntegrationWithOtherSoftware/integration.xml:12
#: IntegrationWithOtherSoftware/int-snmptrap.xml:14
#: IntegrationWithOtherSoftware/int-tcpwrappers.xml:14
#: NagiosAddons/addons.xml:13 Development/epnplugins.xml:14
msgid "Introduction"
msgstr ""

# type: Content of: <chapter><title>
#: AdvancedTopics/eventhandlers.xml:10
msgid "Event Handlers"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:14
msgid ""
"<inlinemediaobject> <imageobject> <imagedata fileref=\"images/eventhandlers."
"png\" format=\"PNG\"/> </imageobject> </inlinemediaobject> Event handlers "
"are optional system commands (scripts or executables) that are run whenever "
"a host or service state change occurs."
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:21
msgid ""
"An obvious use for event handlers is the ability for Nagios to proactively "
"fix problems before anyone is notified. Some other uses for event handlers "
"include:"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:25
msgid "Restarting a failed service"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:28
msgid "Entering a trouble ticket into a helpdesk system"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:31
msgid "Logging event information to a database"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:34
msgid "Cycling power on a host*"
msgstr ""

# type: Content of: <chapter><section><important><para>
#: AdvancedTopics/eventhandlers.xml:40
msgid ""
"Cycling power on a host that is experiencing problems with an automated "
"script should not be implemented lightly. Consider the consequences of this "
"carefully before implementing automatic reboots. :-)"
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:44
msgid "When Are Event Handlers Executed?"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:45
msgid "Event handlers are executed when a service or host:"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:48
msgid "Is in a SOFT problem state"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:51
msgid "Initially goes into a HARD problem state"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:54
msgid "Initially recovers from a SOFT or HARD problem state"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:57
msgid ""
"SOFT and HARD states are described in detail <link linkend=\"thebasics-"
"statetypes\">here</link> ."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:60
msgid "Event Handler Types"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:61
msgid ""
"There are different types of optional event handlers that you can define to "
"handle host and state changes:"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:64
msgid "Global host event handler"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:67
msgid "Global service event handler"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:70
msgid "Host-specific event handlers"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:73
msgid "Service-specific event handlers"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:76
msgid ""
"Global host and service event handlers are run for every host or service "
"state change that occurs, immediately prior to any host- or service-specific "
"event handler that may be run. You can specify global event handler commands "
"by using the <link linkend=\"configuringnagios-configmain-"
"global_host_event_handler\">global_host_event_handler</link> and <link "
"linkend=\"configuringnagios-configmain-global_service_event_handler"
"\">global_service_event_handler</link> options in your main configuration "
"file."
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:80
msgid ""
"Individual hosts and services can have their own event handler command that "
"should be run to handle state changes. You can specify an event handler that "
"should be run by using the <varname>event_handler</varname> directive in "
"your <link linkend=\"configuringnagios-objectdefinitions-host\">host</link> "
"and <link linkend=\"configuringnagios-objectdefinitions-service\">service</"
"link> definitions.  These host- and service-specific event handlers are "
"executed immediately after the (optional) global host or service event "
"handler is executed."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:87
msgid "Enabling Event Handlers"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:88
msgid ""
"Event handlers can be enabled or disabled on a program-wide basis by using "
"the <link linkend=\"configuringnagios-configmain-enable_event_handlers"
"\">enable_event_handlers</link> in your main configuration file."
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:90
msgid ""
"Host- and service-specific event handlers can be enabled or disabled by "
"using the <varname>event_handler_enabled</varname> directive in your <link "
"linkend=\"configuringnagios-objectdefinitions-host\">host</link> and <link "
"linkend=\"configuringnagios-objectdefinitions-service\">service</link> "
"definitions. Host- and service-specific event handlers will not be executed "
"if the global <link linkend=\"configuringnagios-configmain-"
"enable_event_handlers\">enable_event_handlers</link> option is disabled."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:96
msgid "Event Handler Execution Order"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:97
msgid ""
"As already mentioned, global host and service event handlers are executed "
"immediately before host- or service-specific event handlers."
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:99
msgid ""
"Event handlers are executed for HARD problem and recovery states immediately "
"after notifications are sent out."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:102
msgid "Writing Event Handler Commands"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:103
msgid ""
"Event handler commands will likely be shell or perl scripts, but they can be "
"any type of executable that can run from a command prompt. At a minimum, the "
"scripts should take the following <link linkend=\"thebasics-macros\">macros</"
"link> as arguments:"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:106
msgid ""
"For Services: <link linkend=\"thebasics-macrolist-servicestate\">"
"$SERVICESTATE$</link>, <link linkend=\"thebasics-macrolist-servicestatetype"
"\">$SERVICESTATETYPE$</link>, <link linkend=\"thebasics-macrolist-"
"serviceattempt\">$SERVICEATTEMPT$</link>For Hosts: <link linkend=\"thebasics-"
"macrolist-hoststate\">$HOSTSTATE$</link>, <link linkend=\"thebasics-"
"macrolist-hoststatetype\">$HOSTSTATETYPE$</link>, <link linkend=\"thebasics-"
"macrolist-hostattempt\">$HOSTATTEMPT$</link>"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:110
msgid ""
"The scripts should examine the values of the arguments passed to it and take "
"any necessary action based upon those values. The best way to understand how "
"event handlers work is to see an example. Lucky for you, one is provided "
"<link linkend=\"advancedtopics-eventhandlers-example\">below</link>."
msgstr ""

# type: Content of: <chapter><section><tip><para>
#: AdvancedTopics/eventhandlers.xml:113
msgid ""
"Additional sample event handler scripts can be found in the <filename class="
"\"directory\">contrib/eventhandlers/</filename> subdirectory of the Nagios "
"distribution. Some of these sample scripts demonstrate the use of <link "
"linkend=\"advancedtopics-extcommands\">external commands</link> to implement "
"a <link linkend=\"advancedtopics-redundancy\">redundant</link> and <link "
"linkend=\"advancedtopics-distributed\">distributed</link> monitoring "
"environments."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:120
msgid "Permissions For Event Handler Commands"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:121
msgid ""
"Event handler commands will normally execute with the same permissions as "
"the user under which Nagios is running on your machine. This can present a "
"problem if you want to write an event handler that restarts system services, "
"as root privileges are generally required to do these sorts of tasks."
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:124
msgid ""
"Ideally you should evaluate the types of event handlers you will be "
"implementing and grant just enough permissions to the Nagios user for "
"executing the necessary system commands. You might want to try using <ulink "
"url=\"http://www.courtesan.com/sudo/sudo.html\">sudo</ulink> to accomplish "
"this."
msgstr ""

# type: Content of: <chapter><section><title>
#: AdvancedTopics/eventhandlers.xml:130
msgid ""
"<anchor id=\"advancedtopics-eventhandlers-example\"/>Service Event Handler "
"Example"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:131
msgid ""
"The example below assumes that you are monitoring the &protocol-http; server "
"on the local machine and have specified restart-httpd as the event handler "
"command for the &protocol-http; service definition. Also, I will be assuming "
"that you have set the max_check_attempts option for the service to be a "
"value of 4 or greater (i.e. the service is checked 4 times before it is "
"considered to have a real problem). An abbreviated example service "
"definition might look like this..."
msgstr ""

# type: Content of: <chapter><section><programlisting>
#: AdvancedTopics/eventhandlers.xml:132
#, no-wrap
msgid ""
"define service{\n"
"\t\t        host_name               somehost\n"
"\t\t        service_description     HTTP\n"
"\t\t        max_check_attempts      4\n"
"\t\t        event_handler           restart-httpd\n"
"\t\t        ...\n"
"\t\t        }"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:139
msgid ""
"Once the service has been defined with an event handler, we must define that "
"event handler as a command. An example command definition for restart-httpd "
"is shown below. Notice the macros in the command line that I am passing to "
"the event handler script - these are important!"
msgstr ""

# type: Content of: <chapter><section><programlisting>
#: AdvancedTopics/eventhandlers.xml:140
#, no-wrap
msgid ""
"define command{\n"
"\t\t        command_name    restart-httpd\n"
"\t\t        command_line    /usr/local/nagios/libexec/eventhandlers/restart-httpd  $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$\n"
"\t\t        }"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:144
msgid ""
"Now, let's actually write the event handler script (this is the <filename>/"
"usr/local/nagios/libexec/eventhandlers/restart-httpd</filename> script)."
msgstr ""

# type: Content of: <chapter><section><programlisting>
#: AdvancedTopics/eventhandlers.xml:145
#, no-wrap
msgid ""
"\t#!/bin/sh\n"
"\t\t\t#\n"
"\t\t\t# Event handler script for restarting the web server on the local machine\n"
"\t\t\t#\n"
"\t\t\t# Note: This script will only restart the web server if the service is\n"
"\t\t\t#       retried 3 times (in a \"soft\" state) or if the web service somehow\n"
"\t\t\t#       manages to fall into a \"hard\" error state.\n"
"\t\t\t#\n"
"\t\t\t# What state is the HTTP service in?\n"
"\t\t\tcase \"$1\" in\n"
"\t\t\tOK)\n"
"\t\t\t        # The service just came back up, so don't do anything...\n"
"\t\t\t        ;;\n"
"\t\t\tWARNING)\n"
"\t\t\t        # We don't really care about warning states, since the service is probably still running...\n"
"\t\t\t        ;;\n"
"\t\t\tUNKNOWN)\n"
"\t\t\t        # We don't know what might be causing an unknown error, so don't do anything...\n"
"\t\t\t        ;;\n"
"\t\t\tCRITICAL)\n"
"\t\t\t        # Aha!  The HTTP service appears to have a problem - perhaps we should restart the server...\n"
"\t\t\t        # Is this a \"soft\" or a \"hard\" state?\n"
"\t\t\t        case \"$2\" in\n"
"\n"
"\t\t\t        # We're in a \"soft\" state, meaning that Nagios is in the middle of retrying the\n"
"\t\t\t        # check before it turns into a \"hard\" state and contacts get notified...\n"
"\t\t\t        SOFT)\n"
"\n"
"\t\t\t                # What check attempt are we on?  We don't want to restart the web server on the first\n"
"\t\t\t                # check, because it may just be a fluke!\n"
"\t\t\t                case \"$3\" in\n"
"\n"
"\t\t\t                # Wait until the check has been tried 3 times before restarting the web server.\n"
"\t\t\t                # If the check fails on the 4th time (after we restart the web server), the state\n"
"\t\t\t                # type will turn to \"hard\" and contacts will be notified of the problem.\n"
"\t\t\t                # Hopefully this will restart the web server successfully, so the 4th check will\n"
"\t\t\t                # result in a \"soft\" recovery.  If that happens no one gets notified because we\n"
"\t\t\t                # fixed the problem!\n"
"\t\t\t                3)\n"
"\t\t\t                        echo -n \"Restarting HTTP service (3rd soft critical state)...\"\n"
"\t\t\t                        # Call the init script to restart the HTTPD server\n"
"\t\t\t                        /etc/rc.d/init.d/httpd restart\n"
"\t\t\t                        ;;\n"
"\t\t\t                        esac\n"
"\t\t\t                ;;\n"
"\n"
"\t\t\t        # The HTTP service somehow managed to turn into a hard error without getting fixed.\n"
"\t\t\t        # It should have been restarted by the code above, but for some reason it didn't.\n"
"\t\t\t        # Let's give it one last try, shall we?  \n"
"\t\t\t        # Note: Contacts have already been notified of a problem with the service at this\n"
"\t\t\t        # point (unless you disabled notifications for this service)\n"
"\t\t\t        HARD)\n"
"\t\t\t                echo -n \"Restarting HTTP service...\"\n"
"\t\t\t                # Call the init script to restart the HTTPD server\n"
"\t\t\t                /etc/rc.d/init.d/httpd restart\n"
"\t\t\t                ;;\n"
"\t\t\t        esac\n"
"\t\t\t        ;;\n"
"\t\t\tesac\n"
"\t\t\texit 0"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:205
msgid ""
"The sample script provided above will attempt to restart the web server on "
"the local machine in two different instances:"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:208
msgid ""
"After the service has been rechecked for the 3rd time and is in a SOFT "
"CRITICAL state"
msgstr ""

# type: Content of: <chapter><section><itemizedlist><listitem><para>
#: AdvancedTopics/eventhandlers.xml:211
msgid "After the service first goes into a HARD CRITICAL state"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:214
msgid ""
"The script should theoretically restart and web server and fix the problem "
"before the service goes into a HARD problem state, but we include a fallback "
"case in the event it doesn't work the first time. It should be noted that "
"the event handler will only be executed the first time that the service "
"falls into a HARD problem state. This prevents Nagios from continuously "
"executing the script to restart the web server if the service remains in a "
"HARD problem state. You don't want that. :-)"
msgstr ""

# type: Content of: <chapter><section><para>
#: AdvancedTopics/eventhandlers.xml:215
msgid ""
"That's all there is to it! Event handlers are pretty simple to write and "
"implement, so give it a try and see what you can do."
msgstr ""
